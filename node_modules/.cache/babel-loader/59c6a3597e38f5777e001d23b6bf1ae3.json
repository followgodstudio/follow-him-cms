{"ast":null,"code":"var _jsxFileName = \"/Users/mich1095/Development/follow-him-cms/src/pages/shared/SigninPage/SigninForm/SigninForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Heading, Text, Center } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/slices/userSlice\";\nimport { useFormik } from \"formik\";\nimport TextField from \"components/TextField/TextField\";\nimport { HorizontalLine, FormBox, InputGroup, Link, CheckBoxContainer, CheckBoxButton, UncheckedIcon, CheckedIcon, CheckBoxText, Footer, CustomizeButton } from \"./SigninForm.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Please specify a valid email address.\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nfunction SigninForm() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const formId = \"sign-in-form\";\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      dispatch(logIn(values)).then(() => history.push(\"/\")).catch(e => {\n        if (e.response.status === 401) {\n          formik.setFieldError(\"email\", \"Please enter a valid email and password.\");\n        }\n      });\n    },\n    validate\n  });\n  return /*#__PURE__*/_jsxDEV(Center, {\n    display: \"flex\",\n    justifyContent: \"start\",\n    flexDirection: \"column\",\n    ml: \"200px\",\n    minHeight: \"calc(100vh - 180px)\",\n    maxWidth: \"900px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"xl\",\n      marginBottom: \"8px\",\n      color: \"#00CBFE\",\n      children: \"Welcome to Follow Him CMS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      size: \"md\",\n      mt: \"10px\",\n      children: \"Sign in by entering information below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n      id: formId,\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email Address\",\n          id: \"email\",\n          type: \"text\",\n          errorMessage: formik.touched.email && formik.errors.email ? formik.errors.email : null,\n          handleChange: formik.handleChange,\n          handleBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          id: \"password\",\n          type: \"password\",\n          errorMessage: formik.touched.password && formik.errors.password ? formik.errors.password : null,\n          handleChange: formik.handleChange,\n          handleBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"medium\",\n          lineHeight: \"24px\",\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckBoxContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CheckBoxButton, {\n            id: \"rememberMe\",\n            name: \"rememberMe\",\n            type: \"button\",\n            onChange: () => formik.setFieldValue(\"rememberMe\", !formik.values.rememberMe),\n            onClick: () => formik.setFieldValue(\"rememberMe\", !formik.values.rememberMe),\n            children: formik.values.rememberMe ? /*#__PURE__*/_jsxDEV(CheckedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(UncheckedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckBoxText, {\n            size: \"small\",\n            children: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDir: \"column\",\n        paddingY: \"16px\",\n        alignItems: \"center\",\n        position: \"relative\",\n        zIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(CustomizeButton, {\n          form: formId,\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"medium\",\n          lineHeight: \"24px\",\n          mt: \"24px\",\n          children: [\"Need to create an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Sign up Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SigninForm, \"Nk8R/0C2x7od/psJHeOqGTlRBXg=\", false, function () {\n  return [useHistory, useDispatch, useFormik];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/Users/mich1095/Development/follow-him-cms/src/pages/shared/SigninPage/SigninForm/SigninForm.jsx"],"names":["React","Heading","Text","Center","useHistory","useDispatch","logIn","useFormik","TextField","HorizontalLine","FormBox","InputGroup","Link","CheckBoxContainer","CheckBoxButton","UncheckedIcon","CheckedIcon","CheckBoxText","Footer","CustomizeButton","validate","values","errors","email","test","password","SigninForm","history","dispatch","formId","formik","initialValues","onSubmit","then","push","catch","e","response","status","setFieldError","handleSubmit","touched","handleChange","handleBlur","setFieldValue","rememberMe"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Heading, Text, Center } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/slices/userSlice\";\nimport { useFormik } from \"formik\";\nimport TextField from \"components/TextField/TextField\";\nimport {\n  HorizontalLine,\n  FormBox,\n  InputGroup,\n  Link,\n  CheckBoxContainer,\n  CheckBoxButton,\n  UncheckedIcon,\n  CheckedIcon,\n  CheckBoxText,\n  Footer,\n  CustomizeButton,\n} from \"./SigninForm.styles\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Please specify a valid email address.\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nfunction SigninForm() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const formId = \"sign-in-form\";\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      dispatch(logIn(values))\n        .then(() => history.push(\"/\"))\n        .catch((e) => {\n          if (e.response.status === 401) {\n            formik.setFieldError(\n              \"email\",\n              \"Please enter a valid email and password.\"\n            );\n          }\n        });\n    },\n    validate,\n  });\n\n  return (\n    <Center\n      display=\"flex\"\n      justifyContent=\"start\"\n      flexDirection=\"column\"\n      ml=\"200px\"\n      minHeight=\"calc(100vh - 180px)\"\n      maxWidth=\"900px\"\n    >\n      <Heading size=\"xl\" marginBottom=\"8px\" color=\"#00CBFE\">\n        Welcome to Follow Him CMS\n      </Heading>\n      <Heading size=\"md\" mt=\"10px\">\n        Sign in by entering information below\n      </Heading>\n\n      <HorizontalLine />\n\n      <FormBox id={formId} onSubmit={formik.handleSubmit}>\n        <InputGroup>\n          <TextField\n            label=\"Email Address\"\n            id=\"email\"\n            type=\"text\"\n            errorMessage={\n              formik.touched.email && formik.errors.email\n                ? formik.errors.email\n                : null\n            }\n            handleChange={formik.handleChange}\n            handleBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <TextField\n            label=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            errorMessage={\n              formik.touched.password && formik.errors.password\n                ? formik.errors.password\n                : null\n            }\n            handleChange={formik.handleChange}\n            handleBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          <Text size=\"medium\" lineHeight=\"24px\" mb=\"24px\">\n            <Link to=\"/forgot-password\">Forgot your password?</Link>\n          </Text>\n          <CheckBoxContainer>\n            <CheckBoxButton\n              id=\"rememberMe\"\n              name=\"rememberMe\"\n              type=\"button\"\n              onChange={() =>\n                formik.setFieldValue(\"rememberMe\", !formik.values.rememberMe)\n              }\n              onClick={() =>\n                formik.setFieldValue(\"rememberMe\", !formik.values.rememberMe)\n              }\n            >\n              {formik.values.rememberMe ? <CheckedIcon /> : <UncheckedIcon />}\n            </CheckBoxButton>\n            <CheckBoxText size=\"small\">Remember Me</CheckBoxText>\n          </CheckBoxContainer>\n        </InputGroup>\n      </FormBox>\n      <Footer>\n        <Center\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          flexDir=\"column\"\n          paddingY=\"16px\"\n          alignItems=\"center\"\n          position=\"relative\"\n          zIndex={0}\n        >\n          <CustomizeButton form={formId} type=\"submit\">\n            Sign in\n          </CustomizeButton>\n          <Text size=\"medium\" lineHeight=\"24px\" mt=\"24px\">\n            Need to create an account? <Link to=\"/signup\">Sign up Here</Link>\n          </Text>\n        </Center>\n      </Footer>\n    </Center>\n  );\n}\n\nexport default SigninForm;\n"]},"metadata":{},"sourceType":"module"}